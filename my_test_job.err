Currently Loaded Modulefiles:
 1) slurm/slurm/23.02.4   2) nvidia-hpc/2024_241   3) nvhpc/24.1  
/home/yccra/Text2Video-Zero/annotator/openpose/body.py:5: DeprecationWarning: Please use `gaussian_filter` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import gaussian_filter
/home/yccra/Text2Video-Zero/annotator/openpose/hand.py:6: DeprecationWarning: Please use `gaussian_filter` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import gaussian_filter
/home/yccra/.conda/envs/T2VZeroNew/lib/python3.8/site-packages/skimage/util/dtype.py:27: DeprecationWarning: `np.bool8` is a deprecated alias for `np.bool_`.  (Deprecated NumPy 1.24)
  np.bool8: (False, True),
╭───────────────────── Traceback (most recent call last) ──────────────────────╮
│ /home/yccra/Text2Video-Zero/inference_text_to_video.py:5 in <module>         │
│                                                                              │
│    2 print(torch.cuda.is_available())  # 應該返回 True                       │
│    3 print(torch.version.cuda)          # 應該顯示 12.4                      │
│    4 print(torch.cuda.get_device_name(torch.cuda.current_device())) # GPU名  │
│ ❱  5 from model import Model                                                 │
│    6                                                                         │
│    7 model = Model(device = "cuda", dtype = torch.float16)                   │
│    8 from hf_utils import get_model_list                                     │
│                                                                              │
│ /home/yccra/Text2Video-Zero/model.py:11 in <module>                          │
│                                                                              │
│     8 from diffusers.schedulers import EulerAncestralDiscreteScheduler, DDIM │
│     9 from text_to_video_pipeline import TextToVideoPipeline                 │
│    10                                                                        │
│ ❱  11 import utils                                                           │
│    12 import gradio_utils                                                    │
│    13 import os                                                              │
│    14 on_huggingspace = os.environ.get("SPACE_AUTHOR_NAME") == "PAIR"        │
│                                                                              │
│ /home/yccra/Text2Video-Zero/utils.py:19 in <module>                          │
│                                                                              │
│    16 import decord                                                          │
│    17                                                                        │
│    18 apply_canny = CannyDetector()                                          │
│ ❱  19 apply_openpose = OpenposeDetector()                                    │
│    20 apply_midas = MidasDetector()                                          │
│    21                                                                        │
│    22                                                                        │
│                                                                              │
│ /home/yccra/Text2Video-Zero/annotator/openpose/__init__.py:26 in __init__    │
│                                                                              │
│   23 │   │   │   load_file_from_url(body_model_path, model_dir=annotator_ckp │
│   24 │   │   │   load_file_from_url(hand_model_path, model_dir=annotator_ckp │
│   25 │   │                                                                   │
│ ❱ 26 │   │   self.body_estimation = Body(body_modelpath)                     │
│   27 │   │   self.hand_estimation = Hand(hand_modelpath)                     │
│   28 │                                                                       │
│   29 │   def __call__(self, oriImg, hand=False):                             │
│                                                                              │
│ /home/yccra/Text2Video-Zero/annotator/openpose/body.py:21 in __init__        │
│                                                                              │
│    18 │   │   │   self.model = self.model.cuda()                             │
│    19 │   │   │   print('cuda')                                              │
│    20 │   │   # model_dict = util.transfer(self.model, torch.load(model_path │
│ ❱  21 │   │   model_dict = util.transfer(self.model, torch.load(model_path,  │
│    22 │   │   self.model.load_state_dict(model_dict)                         │
│    23 │   │   self.model.eval()                                              │
│    24                                                                        │
│                                                                              │
│ /home/yccra/.conda/envs/T2VZeroNew/lib/python3.8/site-packages/torch/seriali │
│ zation.py:1113 in load                                                       │
│                                                                              │
│   1110 │   │   │   try:                                                      │
│   1111 │   │   │   │   return _legacy_load(opened_file, map_location, _weigh │
│   1112 │   │   │   except RuntimeError as e:                                 │
│ ❱ 1113 │   │   │   │   raise pickle.UnpicklingError(_get_wo_message(str(e))) │
│   1114 │   │   return _legacy_load(                                          │
│   1115 │   │   │   opened_file, map_location, pickle_module, **pickle_load_a │
│   1116 │   │   )                                                             │
╰──────────────────────────────────────────────────────────────────────────────╯
UnpicklingError: Weights only load failed. Re-running `torch.load` with 
`weights_only` set to `False` will likely succeed, but it can result in 
arbitrary code execution. Do it only if you got the file from a trusted source.
 Please file an issue with the following so that we can make `weights_only=True`
compatible with your use case: WeightsUnpickler error: Unsupported operand 118

Check the documentation of torch.load to learn more about types accepted by 
default with weights_only 
https://pytorch.org/docs/stable/generated/torch.load.html.
srun: error: DGX-CN01: task 0: Exited with exit code 1
